{"version":3,"sources":["api/api.ts","components/PostsList/PostsList.tsx","api/posts.ts","components/NewCommentForm/NewCommentForm.tsx","api/comments.ts","components/PostDetails/PostDetails.tsx","api/users.ts","App.tsx","index.tsx"],"names":["BASE_URL","requestOnAPI","url","a","obj","fetch","response","ok","Error","json","PostsList","props","selectedUserId","selectedPostId","selectPostId","useState","posts","setPosts","useEffect","postsFromAPI","userPostsFromAPI","className","length","map","post","userId","title","type","onClick","postId","id","NewCommentForm","addNewComment","name","setName","email","setEmail","body","setBody","onSubmit","event","preventDefault","placeholder","value","onChange","target","addComment","newComment","method","headers","JSON","stringify","responseAPI","deleteComment","commentId","PostDetails","setPost","comments","setComments","isCommentVisible","setIsCommentVisible","postDetailsFromAPI","postCommentsFromAPI","currentComments","deleteCommentFromAPI","filter","comment","getUsers","App","users","setUsers","setSelectedUserId","setSelectedPostId","usersFromAPI","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3aca586f.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n\nexport const requestOnAPI = async (url:string, obj = {}) => {\n  const response = await fetch(`${BASE_URL}/${url}`, obj);\n\n  if (!response.ok) {\n    throw new Error('Error of loading');\n  }\n\n  return response.json();\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPosts, getUserPosts } from '../../api/posts';\nimport './PostsList.scss';\n\ntype Props = {\n  selectedUserId: number;\n  selectedPostId: number;\n  selectPostId: (postId: number) => void;\n};\n\nexport const PostsList: React.FC<Props> = (props) => {\n  const { selectedUserId, selectedPostId, selectPostId } = props;\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    (async () => {\n      if (!selectedUserId) {\n        const postsFromAPI = await getPosts();\n\n        setPosts(postsFromAPI);\n\n        return;\n      }\n\n      const userPostsFromAPI = await getUserPosts(selectedUserId);\n\n      setPosts(userPostsFromAPI);\n    })();\n  }, [selectedUserId]);\n\n  const handleClick = (postId: number) => {\n    if (selectedPostId === postId) {\n      selectPostId(0);\n    } else {\n      selectPostId(postId);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      {!posts.length\n        ? <h3>No posts yet</h3>\n        : (\n          <ul className=\"PostsList__list\">\n            {posts.map(post => (\n              <li\n                className=\"PostsList__item\"\n                key={post.id}\n              >\n                <div>\n                  <b>{`[User #${post.userId}]: `}</b>\n                  {post.title}\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => handleClick(post.id)}\n                >\n                  {selectedPostId === post.id\n                    ? 'Close'\n                    : 'Open'}\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n    </div>\n  );\n};\n","import { requestOnAPI } from './api';\n\nexport const getPosts = () => {\n  return requestOnAPI('/posts');\n};\n\nexport const getUserPosts = (userId: number) => {\n  return requestOnAPI(`/posts?userId=${userId}`);\n};\n\nexport const getPostDetails = (postId: number) => {\n  return requestOnAPI(`/posts/${postId}`);\n};\n","import React, { FormEvent, useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  selectedPostId: number;\n  addNewComment: (newComment: Partial<Comment>) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = (props) => {\n  const { selectedPostId, addNewComment } = props;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    addNewComment({\n      postId: selectedPostId,\n      name,\n      email,\n      body,\n    });\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import { requestOnAPI } from './api';\n\nexport const getPostComments = (postId: number) => {\n  return requestOnAPI(`/comments?postId=${postId}`);\n};\n\nexport const addComment = async (newComment: Partial<Comment>) => {\n  const responseAPI = await requestOnAPI('/comments', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(newComment),\n  });\n\n  return responseAPI;\n};\n\nexport const deleteComment = (commentId: number) => {\n  return requestOnAPI(`/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport { addComment, deleteComment, getPostComments } from '../../api/comments';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectedPostId: number;\n};\n\nexport const PostDetails: React.FC<Props> = (props) => {\n  const { selectedPostId } = props;\n  const [post, setPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isCommentVisible, setIsCommentVisible] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const postDetailsFromAPI = await getPostDetails(selectedPostId);\n\n      setPost(postDetailsFromAPI);\n    })();\n\n    (async () => {\n      const postCommentsFromAPI = await getPostComments(selectedPostId);\n\n      setComments(postCommentsFromAPI);\n    })();\n  }, [selectedPostId]);\n\n  const addNewComment = async (newComment: Partial<Comment>) => {\n    const postCommentsFromAPI = await addComment(newComment);\n\n    setComments((currentComments) => [...currentComments, postCommentsFromAPI]);\n  };\n\n  const deleteCommentFromAPI = async (commentId: number) => {\n    await deleteComment(commentId);\n\n    setComments((currentComments) => currentComments.filter(comment => comment.id !== commentId));\n  };\n\n  const handleClick = () => {\n    setIsCommentVisible(!isCommentVisible);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleClick}\n        >\n          {isCommentVisible\n            ? `Hide ${comments.length} comments`\n            : `Show ${comments.length} comments`}\n        </button>\n\n        <ul className=\"PostDetails__list\">\n          {isCommentVisible && (\n            <>\n              {comments.map(comment => (\n                <li\n                  className=\"PostDetails__list-item\"\n                  key={comment.id}\n                >\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => deleteCommentFromAPI(comment.id)}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </>\n          )}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n            addNewComment={addNewComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { requestOnAPI } from './api';\n\nexport const getUsers = () => {\n  return requestOnAPI('/users');\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUsers } from './api/users';\n\nconst App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      const usersFromAPI = await getUsers();\n\n      setUsers(usersFromAPI);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      const usersFromAPI = await getUsers();\n\n      setUsers(usersFromAPI);\n    })();\n  }, []);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={handleChange}\n          >\n            <option value=\"0\">All users</option>\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUserId={selectedUserId}\n            selectedPostId={selectedPostId}\n            selectPostId={setSelectedPostId}\n          />\n        </div>\n\n        {selectedPostId !== 0 && (\n          <div className=\"App__content\">\n            <PostDetails selectedPostId={selectedPostId} />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}